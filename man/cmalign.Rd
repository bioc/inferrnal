% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/inferrnal.R
\name{cmalign}
\alias{cmalign}
\title{Align sequences to a covariance model}
\usage{
cmalign(cmfile, seq, global = TRUE, cpu = NULL, mxsize = NULL, glocal = global)
}
\arguments{
\item{cmfile}{(\code{character} scalar) path to a covariance model file}

\item{seq}{(\code{character} scalar, names \code{character} vector,
\code{\link[Biostrings]{XStringSet}}, or
\code{\link[ShortRead]{ShortRead}}) sequences to align to the
covariance model. This may be given as a character path to a fasta
file, or the sequences as a character vector object of class
\code{\link[Biostrings]{DNAStringSet}},
\code{\link[Biostrings]{RNAStringSet}}, or
\code{\link[ShortRead]{ShortRead}}.  For \code{cmalign}, the
sequences should be known \emph{a priori} to represent the same region
as the CM; to find the region in longer sequences and align it, use
the \code{alignment} option of \code{\link{cmsearch}}.}

\item{global}{(\code{logical} scalar) If \code{TRUE}, align in global mode.
See \href{http://eddylab.org/infernal/}{Infernal} documentation for
more information.}

\item{cpu}{(\code{integer} scalar) The number of cpus to use.}

\item{mxsize}{(\code{double} scalar) The maximum DP matrix size, in Mb.
Maximum potential memory usage is approximately cpu*mxsize, although
this is usually not realized.
See \href{http://eddylab.org/infernal/}{Infernal} documentation for
more information.}

\item{glocal}{(\code{logical} scalar) (Deprecated) see "global".}
}
\value{
the aligned sequences, as returned by
    \code{\link{read_stockholm_msa}}.
}
\description{
This function calls \code{cmalign} from
\href{http://eddylab.org/infernal/}{Infernal}.  Infernal must be installed
and on the path.  Not all options are included.
}
\details{
One of the easiest places to obtain CMs is
\href{https://rfam.xfam.org/}{Rfam}.
}
\examples{
    # align a set of unaligned 5.8S rRNA sequences to the Rfam CM.
    cm <- cm_5_8S()
    unaln <- sample_rRNA_5_8S()
    cmalign(cm, unaln, cpu = 1)
    # also works if the fasta file has already been loaded
    unaln <- Biostrings::readRNAStringSet(unaln)
    cmalign(cm, unaln, cpu = 1)
}
